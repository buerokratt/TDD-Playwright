templates: 
  - name: button
  - components: 
      - name: Button
        type: Button
        props:
          class: "btn"
          text: "{{ labelButton }}"
          


templates: 
  - name: label_colorpicker
  - components: 
      parent: input
      children: Label + ColorPicker + Button
      - name: Label
        type: Label
        props:
          label: "{{ labelColorpicker }}"
          
      - name: ColorPicker
        type: Input
        props:
          input: "input"
          readonly: true
      
      - name: Button
        type: Button
        props:
          icon: true
          # Indicates it's next to the ColorPicker in the DOM structure
          adjacent_to: div input    


templates:
  - name: label_dropdown
    components:
      parent: select
      children:
        - name: Label
          type: Label
          props:
            label: "{{ labelDropdown }}"
        - name: Dropdown
          type: Input
          props:
            role: "combobox"
            name: "{{ labelDropdown }}"
            expanded: false



templates:
  - name: inputTemplate
  - components:
      parent: input
      children: Input
      - name: Input
        type: Input
        props:
          input: "input"
          name: "{{ name }}" 
          type: "{{ inputType }}"
          placeholder: "{{ placeholder }}"



templates:
  - name: inputTemplate
  - components:
      parent: input
      children: Input
      - name: Input
        type: Input
        props:
          input: "input"
          name: "{{ name }}" 
          type: "{{ inputType }}"
          placeholder: "{{ placeholder }}"



templates: 
  - name: label_date
  - components: 
      parent: input
      children: Label + Date
      - name: Label
        type: Label
        props:
          label: "{{ labelInput }}"
          
      - name: Date
        type: datepicker
        props:
          input: text
          index: 0



templates: 
  - name: label_input
  - components: 
      parent: input
      children: Label + Input
      - name: Label
        type: Label
        props:
          label: "{{ labelInput }}"
          
      - name: Input
        type: Input
        props:
          input: "input"
          name: "{{ name }}"



components:
  - name: header
    type: header
    children: Track(Logo + Track(Track(Label + Switch) + Button + Button))
      - name: Logo
        type: SVG

      - name: Track
        type: wrapper
        children: Track(Label + Switch)

      - name: Label
        type: paragraph
        props:
          hasText: "translation.unanswered", "translation.forwarded"
      - name: Switch
        type: switch
        props:
          switch: "button.switch__button"

      - name: Button
        type: Button
        props:
          text: "translation.logout"




templates: 
  - name: label_switch
  - components: 
      parent: switch
      children: Label + Switch
      - name: Label
        type: Label
        props:
          label: " {{ labelSwitch }}"
          adjacent_to: Switch
          
      - name: Switch
        type: Switch
        props:
          switch: "button.switch__button"
          adjacent_to_label: true



templates:
  name: table
  components:
    parent: card
    columns: [] # This will be populated dynamically
    rows: # Ensure rows structure exists
      - name: Row
        data: [] # This will be populated dynamically
        actions: # Actions should be a list of buttons
          - button:
              args:
                - type: button
                - value: "Change"
                - style: button
          - button:
              args:
                - type: button
                - value: "Delete"
                - style: button
    pagination:
      - label:
          args:
            - type: text
            - value: translation.resultCount
            - style: label
      - dropdown:
          args:
            - type: dropdown
            - default: 10
          options:
            - value: 10
            - value: 20
            - value: 30
            - value: 40
            - value: 50



templates:
  - name: label_textarea
  - components: 
      parent: textarea
      children: Label + Textarea
      - name: Label
        type: Label
        props:
          label: {{ labelTextarea }}
          
      - name: Textarea
        type: Textarea
        props:
          textarea: "textarea"
          value: "textarea_value"
          sibling: "div"
        
      


template: 
  name: label_input_label
  components: 
    parent: track
    children: Label + Input + Label
    - name: Label
      type: Label
      props:
        label: {{ labelTimeinput }}
        
    - name: Input
      type: Input
      props:
        input: "input"
        attributes:
          type: number
        
    - name: Label
      type: Label
      props:
        label: "translations.minutes"


templates:
  name: heading
  components:
    - heading:
        args:
          - type: text
          - value: "{{ labelValue }}"
          - style: "{{ labelStyle }}"




templates: 
  # IMPORTANT: Always select the **track** based on the **weekday** FIRST 
  # before performing any operations on its components (Label, Switch, Start Time, End Time).
  
  - name: label_workingtime
  - components: 
      parentclass: "track"
      children: Label + Switch + Track(startTime + endTime)

      - name: Label
        type: label
        props:
          label: {{ labelWorkingtime }} 

      - name: Switch
        type: Switch
        props:
          switch: "button.switch__button" 
    
      class: "track"
    - name: Start time
        wrapperclass: "startTime"
        type: datepicker
        props:
          input: text
          format: 00:00

      - name: Label
        wrapperclass: "track"
        type: label
        props: 
          label: "translation.timeUntil"
      
      - name: End time
        wrapperclass: "endTime"
        type: datepicker
        props:
          input: text
          format: 00:00
